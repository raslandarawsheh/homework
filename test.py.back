              
# import pygame module in this program 
import cv2
import numpy as np
import socket

#pygame.init() 
    
    
#display_surface = pygame.display.set_mode([1280,720])

#pygame.display.set_caption('Image') 
            
imgs = []
#def recive_imgs():
TCP_IP = 'localhost'
TCP_PORT = 5001


img = cv2.imread('img.jpg')

def flip_imgs_and_show(img):
    cv2.imshow("img", img)
    return
    horizontal_img = img.copy()
    vertical_img = img.copy()
    both_img = img.copy()
 
    # flip img horizontally, vertically,
    # and both axes with flip()
    cv2.flip( horizontal_img, 0, horizontal_img)
    cv2.flip( vertical_img , 1, vertical_img)
    cv2.flip(both_img , -1 , both_img)
    cv2.flip(both_img , 0 , both_img)
    # display the images on screen with imshow()
    up = cv2.hconcat(img, horizontal_img)
    down = cv2.hconcat(vertical_img, both_img)
    img_to_disblay = cv2.vconcat(up, down)
    cv2.imshow("img", img_to_disblay)

def recvall(sock, count):
    buf = b''
    while count:
        newbuf = sock.recv(count)
        if not newbuf: return None
        buf += newbuf
        count -= len(newbuf)
    return buf

def recive_binded_socket():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind((TCP_IP, TCP_PORT))
    s.listen(True)
    conn, addr = s.accept()
    import pdb; pdb.set_trace()
    length = recvall(conn, 16)
    stringData = recvall(conn, int(length))
    data = numpy.fromstring(stringData, dtype='uint8')
    s.close()

    decimg=cv2.imdecode(data,1)
    return decimg



while 1:
    flip_imgs_and_show(recive_binded_socket())


